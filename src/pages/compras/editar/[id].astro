---
import Layout from '../../../layouts/Layout.astro';
import EditOrderForm from '../../../components/compras/EditOrderForm.tsx';
import { getOrderById, type ApiOrder } from '../../../utils/api';

const { id } = Astro.params;

let order: ApiOrder | null = null;
let fetchError: string | null = null;

try {
  if (!id || isNaN(Number(id))) {
    throw new Error('El ID de la orden no es válido.');
  }
  order = await getOrderById(Number(id));
} catch (error) {
  if (error instanceof Error) {
    fetchError = error.message;
  } else {
    fetchError = 'Ocurrió un error inesperado al cargar la orden para editar.';
  }
}
---

<Layout title={order ? `Editando Orden ${order.memoNumber}` : 'Editar Orden'}>
  {
    fetchError ? (
      <div class="p-4 text-center text-red-700 bg-red-100 rounded-lg" role="alert">
        <h2 class="text-xl font-bold mb-2">Error al Cargar la Orden</h2>
        <p>{fetchError}</p>
        <a href="/compras/consultas" class="mt-4 inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
          Volver a Consultas
        </a>
      </div>
    ) : !order ? (
      <p class="text-center text-slate-600">Cargando datos de la orden...</p>
    ) : (
      <div>
        <h1 class="text-3xl font-bold mb-1">
          Editando Orden: {order.memoNumber}
        </h1>
        <p class="text-slate-500 mb-8">
          Realice los cambios necesarios y guarde al final del formulario.
        </p>
        <EditOrderForm initialOrder={order} client:load />
      </div>
    )
  }
</Layout>