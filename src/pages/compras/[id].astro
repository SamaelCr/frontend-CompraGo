---
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/ui/Card.tsx';
import Badge from '../../components/ui/Badge.astro';
import Button from '../../components/ui/Button.astro';
import { getOrderById, type ApiOrder } from '../../utils/api';

const { id } = Astro.params;

let order: ApiOrder | null = null;
let fetchError: string | null = null;

try {
  if (!id || isNaN(Number(id))) {
    throw new Error("El ID de la orden no es válido.");
  }

  order = await getOrderById(Number(id));

} catch (error) {
  console.error(`Error al obtener la orden ${id}:`, error);
  if (error instanceof Error) {
    fetchError = error.message;
  } else {
    fetchError = "Ocurrió un error inesperado al cargar la orden.";
  }
}

const backendUrl = import.meta.env.PUBLIC_API_URL;
---

<Layout title={order ? `Detalle de Orden ${order.memoNumber}` : "Detalle de Orden"}>
  
  {fetchError ? (
    <div class="p-4 text-center text-red-700 bg-red-100 rounded-lg" role="alert">
      <h2 class="text-xl font-bold mb-2">Error al Cargar la Orden</h2>
      <p>{fetchError}</p>
      <a href="/compras/consultas" class="mt-4 inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Volver a Consultas</a>
    </div>
  ) : !order ? (
    <p class="text-center text-slate-600">Cargando detalles de la orden...</p>
  ) : (
    <div>
      <div class="flex flex-wrap items-center justify-between gap-4 mb-8">
        <div>
          <h1 class="text-3xl font-bold mb-1">Detalle de Orden: {order.memoNumber}</h1>
          <p class="text-slate-500">Generada el: {new Date(order.createdAt).toLocaleString('es-VE')}</p>
        </div>
        <div class="flex items-center gap-4">
            {order.status === 'En Proceso' && <Badge color="blue" text="En Proceso" />}
            {order.status === 'Aprobada' && <Badge color="green" text="Aprobada" />}
            {order.status === 'Completada' && <Badge color="gray" text="Completada" />}
            {order.status === 'Anulada' && <Badge color="red" text="Anulada" />}
            
            <a href={`${backendUrl}/api/orders/${order.id}/pdf`} target="_blank" rel="noopener noreferrer">
                <Button variant="primary">Generar PDF</Button>
            </a>
        </div>
      </div>

      <div class="space-y-8">
        <Card client:load title="Información de Requisición">
          <dl class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-4">
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">N° Memorando:</dt><dd>{order.memoNumber}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Fecha Memorando:</dt><dd>{new Date(order.memoDate).toLocaleDateString('es-VE')}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Unidad Solicitante:</dt><dd>{order.requestingUnit}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Funcionario Responsable:</dt><dd>{order.responsibleOfficial}</dd></div>
            <div class="flex flex-col col-span-full"><dt class="font-semibold text-slate-700">Concepto:</dt><dd class="text-slate-800">{order.concept}</dd></div>
          </dl>
        </Card>

        <Card client:load title="Información de Cotización y Firma">
          <dl class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-4">
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Proveedor:</dt><dd>{order.provider}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">N° Presupuesto:</dt><dd>{order.budgetNumber}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Fecha Presupuesto:</dt><dd>{new Date(order.budgetDate).toLocaleDateString('es-VE')}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Tiempo de Entrega:</dt><dd>{order.deliveryTime}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Calidad de Oferta:</dt><dd>{order.offerQuality}</dd></div>
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Tipo de Consulta:</dt><dd>{order.priceInquiryType}</dd></div> {/* <-- LÍNEA AÑADIDA */}
            <div class="flex flex-col"><dt class="font-semibold text-slate-700">Firmado Por:</dt><dd>{order.signedBy.fullName}</dd></div>
            <div class="flex flex-col col-span-full"><dt class="font-semibold text-slate-700">Observaciones:</dt><dd class="text-slate-800">{order.observations || 'Sin observaciones.'}</dd></div>
          </dl>
        </Card>

        <Card client:load title="Información de Punto de Cuenta">
            <dl class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-4">
              <div class="flex flex-col"><dt class="font-semibold text-slate-700">Número de Punto de Cuenta:</dt><dd>{order.accountPoint.accountNumber}</dd></div>
              <div class="flex flex-col"><dt class="font-semibold text-slate-700">Fecha del Punto de Cuenta:</dt><dd>{new Date(order.accountPoint.date).toLocaleDateString('es-VE')}</dd></div>
              <div class="flex flex-col col-span-full"><dt class="font-semibold text-slate-700">Asunto:</dt><dd class="text-slate-800">{order.accountPoint.subject}</dd></div>
            </dl>
          </Card>
      </div>
    </div>
  )}
</Layout>