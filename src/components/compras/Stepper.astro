---
interface Props {
  currentStep: number;
}
const { currentStep } = Astro.props;

const steps = ["Requisición", "Cotización", "Punto de Cuenta", "Generar Orden"];
---
<div class="w-full py-4">
  <div class="flex">
    {steps.map((label, index) => {
      const stepNumber = index + 1;
      const isActive = stepNumber === currentStep;
      const isCompleted = stepNumber < currentStep;
      return (
        <>
          <div class="flex-1">
            <div class:list={[
              "w-10 h-10 mx-auto rounded-full text-lg flex items-center justify-center font-semibold",
              { "bg-blue-600 text-white": isActive || isCompleted },
              { "bg-white border-2 border-slate-300 text-slate-500": !isActive && !isCompleted }
            ]}>
              {isCompleted ? (
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              ) : (
                stepNumber
              )}
            </div>
            <div class:list={[
              "text-center mt-2 font-medium",
              { "text-blue-600": isActive },
              { "text-slate-500": !isActive }
            ]}>{label}</div>
          </div>
          {index < steps.length - 1 && (
            <div class="flex-1 flex items-center">
              <div class:list={[
                "w-full h-1",
                { "bg-blue-600": isCompleted },
                { "bg-slate-300": !isCompleted }
              ]}></div>
            </div>
          )}
        </>
      )
    })}
  </div>
</div>